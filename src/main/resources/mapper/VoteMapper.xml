<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcits.dao.VoteMapper">
  <resultMap id="BaseResultMap" type="com.dcits.pojo.Vote">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="candidateCount" jdbcType="INTEGER" property="candidateCount" />
    <result column="voteCount" jdbcType="INTEGER" property="voteCount" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, "name", starttime, endtime, "candidateCount", "voteCount",explain
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from vote
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from vote
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dcits.pojo.Vote">
    <!--@mbg.generated-->
    insert into vote (id, "name", starttime, 
      endtime,"candidateCount","voteCount",explain)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{candidateCount,jdbcType=INTEGER}, #{voteCount,jdbcType=INTEGER}, #{explain,jdbcType=VARCHAR} )
  </insert>
  <insert id="insertSelective" parameterType="com.dcits.pojo.Vote">
    <!--@mbg.generated-->
    insert into vote
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        "name",
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="candidateCount != null">
        "candidateCount",
      </if>
      <if test="voteCount != null">
        "voteCount",
      </if>
      <if test="explain != null">
        explain
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="candidateCount != null">
        #{candidateCount,jdbcType=INTEGER},
      </if>
      <if test="voteCount != null">
        #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dcits.pojo.Vote">
    <!--@mbg.generated-->
    update vote
    <set>
      <if test="name != null">
        "name" = #{name,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="candidateCount != null">
        "candidateCount" = #{candidateCount,jdbcType=INTEGER},
      </if>
      <if test="voteCount != null">
        "voteCount"= #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        explain = #{explain,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dcits.pojo.Vote">
    <!--@mbg.generated-->
    update vote
    set "name" = #{name,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      "candidateCount" = #{candidateCount,jdbcType=INTEGER},
      "voteCount"= #{voteCount,jdbcType=INTEGER},
      explain = #{explain,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findNameById" resultType="java.lang.String">
  select name from vote where id= #{voteId,jdbcType=INTEGER}
</select>

  <select id="findVoteByTime" resultMap="BaseResultMap">
  select * from vote where now() between starttime and endtime
</select>

  <select id="findVoteOfNotStarted" resultMap="BaseResultMap">
    select * from vote where starttime > now()
  </select>

  <select id="findVoteOfFinish" resultMap="BaseResultMap">
    select * from vote where now() > endtime
  </select>

  <select id="findOrderByStarttime" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from vote
    <where>
      <if test="name != null">
        and name like CONCAT(CONCAT('%', #{name}), '%')
      </if>
    </where>
    order by starttime desc
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select id,name from vote
  </select>

  <select id="countTotal" resultType="java.lang.Integer">
    select count(id) from vote
  </select>

  <select id="countCurrent" resultType="java.lang.Integer">
    select count(id) from vote where now() between starttime and endtime
  </select>

  <select id="countUpcoming" resultType="java.lang.Integer">
    select count(id) from vote where starttime > now()
  </select>

  <select id="countFinished" resultType="java.lang.Integer">
    select count(id) from vote where now() > endtime
  </select>

  <select id="findItcodeByVoteidAndCandidateId" resultType="com.dcits.pojo.CountPollOfSection">
    select c.id as cId,s.id as sId,count(u.id) as count
    from users as u
    left join section as s on s.id=u.section_id
    left join vote_users as vu on vu.user_id= u.id
    left join candidate as c on c.voteid=vu.vote_id
    where u.id in (SELECT vu.user_id FROM "vote_users"  where vu.vote_id= #{voteId,jdbcType=INTEGER} and position(#{candidateId,jdbcType=VARCHAR} in vu.choice)>0)
    and c.id=#{cId,jdbcType=INTEGER}
    group by s.id,c.id order by s.id
  </select>
</mapper>